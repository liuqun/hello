# @configure_input@
#


# Compiler options
CC := @CC@
CFLAGS := @CFLAGS@
LDFLAGS := @LDFLAGS@
EXEEXT := @EXEEXT@

# Library packages
PKG_CONFIG := @PKG_CONFIG@
ifndef PKG_CONFIG
 $(error Can not find pkg-config, \
         please try ./configure PKG_CONFIG=/opt/gtk/bin/pkg-config)
endif
GTK_CFLAGS = $(shell "$(PKG_CONFIG)" --cflags gtk+-2.0)
GTK_LIBS = $(shell "$(PKG_CONFIG)" --libs gtk+-2.0)

# Useful commands
MKDIR := mkdir -p
RM := rm -rf
INSTALL := install
INSTALL_PROGRAM := $(INSTALL)
INSTALL_DATA := $(INSTALL) -m 644
INSTALL_DIR := $(INSTALL) -d

# Installation configuration
PACKAGE_NAME := @PACKAGE_NAME@
prefix := @prefix@
exec_prefix := @exec_prefix@
bindir := @bindir@
datarootdir := @datarootdir@
datadir := @datadir@
localedir := @localedir@
lang := zh_CN

# Configure project files
top_level_source_dir := @srcdir@
VPATH := $(top_level_source_dir)
execultable_files :=
source_files  :=
object_files  :=

# Load all building dependences...
.PHONY: all
all:

-include $(top_level_source_dir)/*.mk

all: Makefile $(execultable_files)

#------------------------------
# Default building rules.
%@EXEEXT@: %.o
	$(LINK.o) $^ $(LDLIBS) -o $@
%.o: %.c
	$(COMPILE.c) $< -o $@
%.pot: %.c
	xgettext --from-code=UTF-8 -k_ $^ -o $@
%.gmo: %.po
	msgfmt $< -o $@
# Recreate Makefile when Makefile.in has been changed
%: %.in
	./config.status -q --file=$@
#------------------------------
# make clean
.PHONY: clean
clean:
	$(RM) $(execultable_files) $(object_files)
#------------------------------
# make distclean
.PHONY: distclean
distclean: clean
	$(RM) autom4te.cache configure config.log config.status Makefile
#------------------------------
# make install
.PHONY: install
install: $(execultable_files) $(lang).gmo
	echo $(lang)
	$(INSTALL_DIR) $(bindir)
	$(INSTALL_DIR) $(datadir)
	$(INSTALL_DIR) $(localedir)/$(lang)/LC_MESSAGES
	$(INSTALL_PROGRAM) $(execultable_files) $(bindir)
	$(INSTALL_DATA) $(lang).gmo $(localedir)/$(lang)/LC_MESSAGES/$(PACKAGE_NAME).mo

